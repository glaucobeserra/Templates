<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>com.apple.dt.unit.singleViewApplication</string>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.coreDataCocoaTouchApplication</string>
		<string>com.glauco.cooordinatedSceneLifecycleApplication</string>
	</array>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template provides a starting point for an application that uses a single view. It provides a view controller to manage the view, and a storyboard or nib file that contains the view.</string>
	<key>SortOrder</key>
	<integer>1</integer>
	<key>NameOfInitialFileForEditor</key>
	<string>ContentView.swift</string>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>languageChoice</string>
			<key>Units</key>
			<dict>
				<key>Objective-C</key>
				<dict>
					<key>Nodes</key>
					<array>
						<string>___PACKAGENAME___MainViewController.h:comments</string>
						<string>___PACKAGENAME___MainViewController.h:imports:importCocoa</string>
						<string>___PACKAGENAME___MainViewController.h:interface(___FILEBASENAME___ : UIViewController)</string>
						<string>___PACKAGENAME___MainViewController.m:comments</string>
						<string>___PACKAGENAME___MainViewController.m:imports:importHeader:ViewController.h</string>
						<string>___PACKAGENAME___MainViewController.m:extension</string>
						<string>___PACKAGENAME___MainViewController.m:implementation:methods:viewDidLoad(- (void\)viewDidLoad)</string>
						<string>___PACKAGENAME___MainViewController.m:implementation:methods:viewDidLoad:super</string>
						<string>Helpers/Coordinator.swift</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>Helpers/Coordinator.swift</key>
						<dict>
							<key>Path</key>
							<string>Helpers/Coordinator.swift</string>
							<key>SortOrder</key>
							<integer>98</integer>
						</dict>
					</dict>
					<key>Targets</key>
					<array>
						<dict/>
					</array>
				</dict>
				<key>Swift</key>
				<array>
					<dict>
						<key>RequiredOptions</key>
						<dict>
							<key>userInterface</key>
							<string>Storyboard</string>
						</dict>
						<key>Nodes</key>
						<array>
							<string>Helpers/Coordinator.swift</string>
							<string>___PACKAGENAME___MainCoordinator.swift</string>
							<string>___PACKAGENAME___MainViewController.swift</string>
						</array>
						<key>Definitions</key>
						<dict>
							<key>Helpers/Coordinator.swift</key>
							<dict>
								<key>Path</key>
								<string>Helpers/Coordinator.swift</string>
							</dict>
							<key>___PACKAGENAME___MainCoordinator.swift</key>
							<dict>
								<key>Path</key>
								<string>___PACKAGENAME___MainCoordinator.swift</string>
							</dict>
							<key>___PACKAGENAME___MainViewController.swift</key>
							<dict>
								<key>Path</key>
								<string>___PACKAGENAME___MainViewController.swift</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>RequiredOptions</key>
						<dict>
							<key>userInterface</key>
							<string>SwiftUI</string>
							<key>appLifecycle</key>
							<string>Cocoa</string>
						</dict>
						<key>Nodes</key>
						<array>
							<string>Preview Content/Preview Assets.xcassets</string>
							<string>SceneDelegate.swift:imports:importSwiftUI</string>
							<string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</string>
							<string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body:windowScene</string>
						</array>
						<key>Definitions</key>
						<dict>
							<key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</key>
							<string>
// Create the SwiftUI view that provides the window contents.
let contentView = ContentView()
</string>
							<key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body:windowScene</key>
							<string>
// Use a UIHostingController as window root view controller.
if let windowScene = scene as? UIWindowScene {
    let window = UIWindow(windowScene: windowScene)
    window.rootViewController = UIHostingController(rootView: contentView)
    self.window = window
    window.makeKeyAndVisible()
}</string>
							<key>*:imports:importSwiftUI</key>
							<string>import SwiftUI</string>
						</dict>
						<key>Targets</key>
						<array>
							<dict>
								<key>SharedSettings</key>
								<dict>
									<key>ENABLE_PREVIEWS</key>
									<string>YES</string>
									<key>DEVELOPMENT_ASSET_PATHS</key>
									<string>___PACKAGENAMEPREVIEWCONTENT:quoteIfNeeded___</string>
								</dict>
							</dict>
						</array>
					</dict>
					<dict>
						<key>RequiredOptions</key>
						<dict>
							<key>userInterface</key>
							<string>SwiftUI</string>
							<key>coreData</key>
							<string>true</string>
							<key>appLifecycle</key>
							<string>Cocoa</string>
						</dict>
						<key>Nodes</key>
						<array>
							<string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</string>
						</array>
						<key>Definitions</key>
						<dict>
							<key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</key>
							<string>
// Get the managed object context from the shared persistent container.
let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext

// Create the SwiftUI view and set the context as the value for the managedObjectContext environment keyPath.
// Add `@Environment(\.managedObjectContext)` in the views that will need the context.
let contentView = ContentView().environment(\.managedObjectContext, context)
</string>
						</dict>
					</dict>
				</array>
			</dict>
		</dict>
		<dict>
			<key>Identifier</key>
			<string>userInterface</string>
			<key>Name</key>
			<string>Interface:</string>
			<key>Description</key>
			<string>The type of user interface.</string>
			<key>Values</key>
			<array>
				<string>SwiftUI</string>
				<string>Storyboard</string>
			</array>
			<key>Default</key>
			<string>SwiftUI</string>
			<key>Type</key>
			<string>popup</string>
		</dict>
	</array>
	<key>Image</key>
	<dict>
		<key>Path</key>
		<string>TemplateIcon.png</string>
	</dict>
</dict>
</plist>
